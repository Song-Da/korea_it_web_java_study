package _21_class.OOP;

public class OOP {
    public static void main(String[] args) {
        /*
        OOP => Object Oriented Programing
        객체 지향 프로그래밍
        - 현실 세계의 개념을 코드로 표현
        - 사람, 동물, 자동차 하나의 객체로 보는 것
        - 상태(속성)과 동작(기능)을 중심으로 프로그래밍
        붕어빵을 생각하면 됨. 클래스는 하나의 설계도면, 실체화를 시키기 위한 것.


        OOP의 4가지 원칙         면접 질문으로 자주 나옴!!
        1. 추상화
          - 복잡한 내부 동작은 감추고, 꼭 필요한 기능만 보여주는 것.
        2. 캡슐화
          - 정보 은닉 | 내부 변수에 직접적으로 접근이 불가해짐, 한 번 감싸는 형태
        3. 상속
        4. 다형성


        접근제어자 - 하는 이유는 정보 은닉을 위해서.
        public - 어디서든 접근이 가능 (보통 씀)
        default - 같은 패키지에서만 접근 가능 (명시를 따로 하지 않으면 default)
        protected - 같은 패키지 또는 자식 클래스에서만 접근 가능
        private - 해당 클래스 내부에서만 접근 가능 | 다른 곳에서 접근이 불가능함. (제일 많이 씀)
         */

    }
}